# ─────────────────────────────────────────────
# render.yaml  –  Scientific-AI-Orchestrator
# ─────────────────────────────────────────────

# 1️⃣  Services
services:
  # ─────────────  API  ─────────────
  - type: web
    name: orchestrator-api
    runtime: python
    plan: free                       # change to standard/starter later
    buildCommand: pip install -r requirements.txt
    startCommand: uvicorn app.main:app --host 0.0.0.0 --port $PORT
    healthCheckPath: /health

    envVars:
      - key: OPENAI_API_KEY          # add secret in Render dashboard
        sync: false
      - key: OPENAI_MODEL
        value: gpt-4o-mini

      # 👉 correct fromService mapping
      - key: REDIS_URL
        fromService:
          name: orchestrator-redis
          type: redis
          property: connectionString

      - key: COST_THRESHOLD_USD
        value: "0.05"

      - key: CORS_ORIGINS
        value: '["https://your-app.vercel.app","http://localhost:3000"]'

      # PubMed Configuration
      - key: PUBMED_EMAIL
        sync: false                  # add secret in Render dashboard
      - key: PUBMED_API_KEY
        sync: false                  # optional, add secret in Render dashboard


  # ────────────  Worker  ────────────
  - type: worker
    name: orchestrator-worker
    runtime: python
    plan: free
    buildCommand: pip install -r requirements.txt
    startCommand: celery -A app.workers worker --loglevel=info --concurrency=2

    envVars:
      - key: OPENAI_API_KEY
        sync: false
      - key: OPENAI_MODEL
        value: gpt-4o-mini

      - key: REDIS_URL
        fromService:
          name: orchestrator-redis
          type: redis
          property: connectionString

      - key: COST_THRESHOLD_USD
        value: "0.05"

      # PubMed Configuration
      - key: PUBMED_EMAIL
        sync: false                  # add secret in Render dashboard
      - key: PUBMED_API_KEY
        sync: false                  # optional, add secret in Render dashboard


  # ─────────────  Redis  ─────────────
  - type: redis
    name: orchestrator-redis
    plan: free
    maxmemoryPolicy: allkeys-lru
    ipAllowList: []                  # required by Render schema


# (No envVarGroups section – everything is inline for simplicity)